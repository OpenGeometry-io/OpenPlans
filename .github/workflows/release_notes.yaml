name: Release Notes

on:
  pull_request:
    types:
      - closed

jobs:
  release_notes:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR Content
        uses: actions/checkout@v4

      - name: Capture PR Title, Date and User
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_USER="${{ github.event.pull_request.user.login }}"
          PR_DATE=${{ github.event.pull_request.merged_at }}
          
          echo "pr_title=$PR_TITLE" >> $GITHUB_ENV
          echo "pr_user=$PR_USER" >> $GITHUB_ENV
          echo "pr_date=$PR_DATE" >> $GITHUB_ENV
          
          # Check if PR Title is empty
          if [[ -z "$PR_TITLE" ]]; then
            echo "No PR title found."
            exit 0
          fi

          # Check if PR Title contains feat: and extract the message and trigger the release
          if [[ "$PR_TITLE" == *"feat:"* ]]; then
            TYPE="feature"
            MESSAGE=$(echo "$PR_TITLE" | grep -oP "(?<=feat: ).*")
            if [[ -n "$MESSAGE" ]]; then
              echo "message=$MESSAGE" >> $GITHUB_ENV
              echo "type=$TYPE" >> $GITHUB_ENV
            else
              echo "No valid feature message found after feat: "
              exit 0
            fi
          else
            echo "No feat: found in PR title."
            exit 0
          fi
      
      - name: Push To Notion
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          # Call Notion API and if 200 status code print success message
          curl -X POST https://api.notion.com/v1/pages \
          -H 'Authorization: Bearer '"$NOTION_API_KEY"'' \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          -data '{
            "parent": { "database_id": "'"$NOTION_DATABASE_ID"'" },
            "properties": {
              "Title": {
                "rich_text": [
                  {
                    "text": {
                      "content": ${{ env.message }}
                    }
                  }
                ]
              }
            }
          }'

          


        


