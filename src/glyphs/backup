const midTopBoxDiv = document.createElement('div');
    midTopBoxDiv.style.position = 'absolute';
    midTopBoxDiv.style.width = '7px';
    midTopBoxDiv.style.height = '7px';
    midTopBoxDiv.style.backgroundColor = '#1D24CA';
    midTopBoxDiv.addEventListener("pointermove", (event) => {
      midTopBoxDiv.style.cursor = 'ns-resize';
    });

    const midTopBox = new CSS2DObject(midTopBoxDiv);
    midTopBox.position.set((minEnd.x + maxEnd.x) / 2, 0, minEnd.z);
    midTopBox.userData = { type: 'glyph-box-mid-top' };
    this._selectorBox.add(midTopBox);

    const midBottomBoxDiv = document.createElement('div');
    midBottomBoxDiv.style.position = 'absolute';
    midBottomBoxDiv.style.width = '7px';
    midBottomBoxDiv.style.height = '7px';
    midBottomBoxDiv.style.backgroundColor = '#1D24CA';
    const midBottomBox = new CSS2DObject(midBottomBoxDiv);
    midBottomBox.position.set((minEnd.x + maxEnd.x) / 2, 0, maxEnd.z);
    midBottomBox.userData = { type: 'glyph-box-mid-bottom' };
    this._selectorBox.add(midBottomBox);

    // Left Top
    const midLeftBoxDiv = document.createElement('div');
    midLeftBoxDiv.style.position = 'absolute';
    midLeftBoxDiv.style.width = '7px';
    midLeftBoxDiv.style.height = '7px';
    midLeftBoxDiv.style.backgroundColor = '#1D24CA';
    // Left Top Cursor Div
    const midLeftBoxCursorDiv = document.createElement('div');
    midLeftBoxCursorDiv.style.position = 'absolute';
    midLeftBoxCursorDiv.style.width = '14px';
    midLeftBoxCursorDiv.style.height = '14px';
    midLeftBoxCursorDiv.style.transform = 'translate(-100%, -100%)';
    midLeftBoxCursorDiv.style.backgroundColor = 'transparent';
    midLeftBoxCursorDiv.style.border = '1px solid #1D24CA';

    // midLeftBoxCursorDiv.addEventListener("pointermove", (event) => {
    //   midLeftBoxCursorDiv.style.cursor = 'url(https://opengeometry-43705.web.app/Open-Plans-Resources/left-top.png), default';
    // });
  
    midLeftBoxDiv.appendChild(midLeftBoxCursorDiv);

    const midLeftBox = new CSS2DObject(midLeftBoxDiv);
    midLeftBox.position.set(minEnd.x, 0, minEnd.z);
    midLeftBox.userData = { type: 'glyph-box-top-left' };
    this._selectorBox.add(midLeftBox);

    // Right Top
    const midRightBoxDiv = document.createElement('div');
    midRightBoxDiv.style.position = 'absolute';
    midRightBoxDiv.style.width = '7px';
    midRightBoxDiv.style.height = '7px';
    midRightBoxDiv.style.backgroundColor = '#1D24CA';
    // Right Top Cursor Div
    const midRightBoxCursorDiv = document.createElement('div');
    midRightBoxCursorDiv.style.position = 'absolute';
    midRightBoxCursorDiv.style.width = '14px';
    midRightBoxCursorDiv.style.height = '14px';
    midRightBoxCursorDiv.style.transform = 'translate(50%, -100%)';
    midRightBoxCursorDiv.style.backgroundColor = 'transparent';
    midRightBoxCursorDiv.style.border = '1px solid #1D24CA';

    // midRightBoxCursorDiv.addEventListener("pointermove", (event) => {
    //   midRightBoxCursorDiv.style.cursor = 'url(https://opengeometry-43705.web.app/Open-Plans-Resources/right-top.png), default';
    // });

    midRightBoxDiv.appendChild(midRightBoxCursorDiv);

    const midRightBox = new CSS2DObject(midRightBoxDiv);
    midRightBox.position.set(maxEnd.x, 0, minEnd.z);
    midRightBox.userData = { type: 'glyph-box-top-right' };
    this._selectorBox.add(midRightBox);

    // Left Bottom
    const leftBottomBoxDiv = document.createElement('div');
    leftBottomBoxDiv.style.position = 'absolute';
    leftBottomBoxDiv.style.width = '7px';
    leftBottomBoxDiv.style.height = '7px';
    leftBottomBoxDiv.style.backgroundColor = '#1D24CA';
    // Left Bottom Cursor Div
    const leftBottomBoxCursorDiv = document.createElement('div');
    leftBottomBoxCursorDiv.style.position = 'absolute';
    leftBottomBoxCursorDiv.style.width = '14px';
    leftBottomBoxCursorDiv.style.height = '14px';
    leftBottomBoxCursorDiv.style.transform = 'translate(-100%, 50%)';
    leftBottomBoxCursorDiv.style.backgroundColor = 'transparent';
    leftBottomBoxCursorDiv.style.border = '1px solid #1D24CA';

    leftBottomBoxCursorDiv.addEventListener("mouseenter", (event) => {
      console.log('Mouse Enter');
      leftBottomBoxCursorDiv.style.cursor = 'url(https://opengeometry-43705.web.app/Open-Plans-Resources/left-bottom.png), default';
    });

    leftBottomBoxCursorDiv.addEventListener("mousedown", (event) => {
      console.log('Mouse Down');
      this._isEditing = true;

      const selectedNode = this._selectedGlyph;
      const glyphCenter = new THREE.Vector3();
      const box = new THREE.Box3().setFromObject(selectedNode as THREE.Object3D);
      box.getCenter(glyphCenter);

      this._glyphSelectorHelper.nodeCenter.copy(glyphCenter);
      this._glyphSelectorHelper.center.copy(glyphCenter).add(new THREE.Vector3(0, 0, (maxEnd.z - minEnd.z) / 2));
      const debugCenterSphere = this._glyphSelectorHelper.debugMesh.getObjectByName('debug-center-sphere') as THREE.Mesh;
      debugCenterSphere.position.copy(glyphCenter.add(new THREE.Vector3(0, 0, (maxEnd.z - minEnd.z) / 2)));

      const dirVector = new THREE.Vector3();
      dirVector.addVectors(glyphCenter, new THREE.Vector3(-1, 0, 0));
      this._glyphSelectorHelper.direction.copy(dirVector);
      const debugDirectionSphere = this._glyphSelectorHelper.debugMesh.getObjectByName('debug-direction-sphere') as THREE.Mesh;
      debugDirectionSphere.position.copy(dirVector);
    });

    leftBottomBoxCursorDiv.addEventListener("mouseup", (event) => {
      console.log('Mouse Up');
      this._isEditing = false;
    });

    leftBottomBoxDiv.appendChild(leftBottomBoxCursorDiv);

    const leftBottomBox = new CSS2DObject(leftBottomBoxDiv);
    leftBottomBox.position.set(minEnd.x, 0, maxEnd.z);
    leftBottomBox.userData = { type: 'glyph-box-bottom-left' };
    this._selectorBox.add(leftBottomBox);

    // Right Bottom
    const rightBottomBoxDiv = document.createElement('div');
    rightBottomBoxDiv.style.position = 'absolute';
    rightBottomBoxDiv.style.width = '7px';
    rightBottomBoxDiv.style.height = '7px';
    rightBottomBoxDiv.style.backgroundColor = '#1D24CA';
    // Right Bottom Cursor Div
    const rightBottomBoxCursorDiv = document.createElement('div');
    rightBottomBoxCursorDiv.style.position = 'absolute';
    rightBottomBoxCursorDiv.style.width = '14px';
    rightBottomBoxCursorDiv.style.height = '14px';
    rightBottomBoxCursorDiv.style.transform = 'translate(50%, 50%)';
    rightBottomBoxCursorDiv.style.backgroundColor = 'transparent';
    rightBottomBoxCursorDiv.style.border = '1px solid #1D24CA';

    rightBottomBoxCursorDiv.addEventListener("mouseenter", (event) => {
      console.log('Mouse Enter');
      rightBottomBoxCursorDiv.style.cursor = 'url(https://opengeometry-43705.web.app/Open-Plans-Resources/right-bottom.png), default';
    });

    rightBottomBoxCursorDiv.addEventListener("mousedown", (event) => {
      console.log('Mouse Down');
      this._isEditing = true;

      const selectedNode = this._selectedGlyph;
      const glyphCenter = new THREE.Vector3();
      const box = new THREE.Box3().setFromObject(selectedNode as THREE.Object3D);
      box.getCenter(glyphCenter);

      this._glyphSelectorHelper.center.copy(glyphCenter);
      const debugCenterSphere = this._glyphSelectorHelper.debugMesh.getObjectByName('debug-center-sphere') as THREE.Mesh;
      debugCenterSphere.position.copy(glyphCenter);

      // This is point not the vector
      const dirVector = new THREE.Vector3();
      dirVector.addVectors(glyphCenter, new THREE.Vector3(1, 0, 0));
      this._glyphSelectorHelper.direction.copy(dirVector);
      const debugDirectionSphere = this._glyphSelectorHelper.debugMesh.getObjectByName('debug-direction-sphere') as THREE.Mesh;
      debugDirectionSphere.position.copy(dirVector);
    });

    rightBottomBoxCursorDiv.addEventListener("mouseup", (event) => {
      // Clearing
      console.log('Mouse Up');
      this._isEditing = false;
    });

    rightBottomBoxDiv.appendChild(rightBottomBoxCursorDiv);

    const rightBottomBox = new CSS2DObject(rightBottomBoxDiv);
    rightBottomBox.position.set(maxEnd.x, 0, maxEnd.z);
    rightBottomBox.userData = { type: 'glyph-box-bottom-right' };
    this._selectorBox.add(rightBottomBox);